import{z as C,B,C as $,d as g,A as T,D as M,r as c,_ as V,b as n,j as o,k as f,l as p,E as u,h as d,e as F,f as I,q as S,g as D,F as U,i as v,o as r,m as L,p as w,n as N}from"./index.179807d3.js";import{L as z}from"./LoadingModal.3f1ef332.js";async function j(a){const e=C($,"meals");await B(e,a)}const E=g({name:"AddMealToBaseForm",components:{LoadingModal:z,AppButton:T},setup(){const a=M({name:"",kcal:0,protein:0,fat:0,carbohydrates:0}),e=M({name:!1,kcal:!1,protein:!1,fat:!1,carbohydrates:!1}),y=c(0),b=c("Wait"),i=c(!1),m=c(!1),l=c(!0),t=M({name:"",kcal:0,protein:0,fat:0,carbohydrates:0});async function s(){if(!t.name.match(/^[A-Za-z]+$/)){e.name=!0;return}if(e.name=!1,t.kcal<=0&&t.kcal<1e3){e.kcal=!0;return}if(e.kcal=!1,t.protein>200){e.protein=!0;return}if(e.protein=!1,t.fat>200){e.fat=!0;return}if(e.fat=!1,t.carbohydrates>600){e.carbohydrates=!0;return}e.carbohydrates=!1;const h={name:t.name,kcal:Math.floor(t.kcal),protein:Math.floor(t.protein),fat:Math.floor(t.fat),carbohydrates:Math.floor(t.carbohydrates),id:Math.floor(Math.random()*200)};await k(h)}async function k(h){m.value=!0,i.value=!0,await j(h),await Object.assign(t,a),b.value="Meal added :)",l.value=!1,m.value=!1}function A(){i.value=!1}return{form:t,addMeal:k,closeModal:A,message:b,showModal:i,regInSubmission:m,passData:l,addMealValidationForm:e,verification:s,n:y}}});const _=a=>(w("data-v-b9037353"),a=a(),N(),a),P={class:"form__name"},q=_(()=>o("label",{class:"family-Nerko"},"Name",-1)),O={key:0,class:"error"},W={class:"form__kcal"},Z=_(()=>o("label",{class:"family-Nerko"},"Calory",-1)),G={key:0,class:"error"},H={class:"form__protein"},J=_(()=>o("label",{class:"family-Nerko"},"Protein",-1)),K={key:0,class:"error"},Q={class:"form__fat"},R=_(()=>o("label",{class:"family-Nerko"},"Fat",-1)),X={key:0,class:"error"},Y={class:"form__carbohydrates"},x=_(()=>o("label",{class:"family-Nerko"},"Carbohydrates",-1)),aa={key:0,class:"error"},ea={class:"form__button"};function oa(a,e,y,b,i,m){const l=v("AppButton"),t=v("LoadingModal");return r(),n(U,null,[o("form",{class:"form",onSubmit:e[5]||(e[5]=S((...s)=>a.verification&&a.verification(...s),["prevent"]))},[o("div",P,[q,f(o("input",{"data-name":"",type:"text","onUpdate:modelValue":e[0]||(e[0]=s=>a.form.name=s),style:u({borderColor:a.addMealValidationForm.name?"tomato":"rgb(115, 184, 152) "})},null,4),[[p,a.form.name]]),a.addMealValidationForm.name?(r(),n("p",O,"Name can't be empty")):d("",!0)]),o("div",W,[Z,f(o("input",{"data-calory":"",type:"number",min:"0",inputmode:"numeric",pattern:"[0-9]*",title:"Non-negative integral number","onUpdate:modelValue":e[1]||(e[1]=s=>a.form.kcal=s),style:u({borderColor:a.addMealValidationForm.kcal?"tomato":"rgb(115, 184, 152) "})},null,4),[[p,a.form.kcal]]),a.addMealValidationForm.kcal?(r(),n("p",G," Calorie must be on 1 to 1000 ")):d("",!0)]),o("div",H,[J,f(o("input",{"data-protein":"",type:"number",min:"0",inputmode:"numeric",pattern:"[0-9]*",title:"Non-negative integral number","onUpdate:modelValue":e[2]||(e[2]=s=>a.form.protein=s),style:u({borderColor:a.addMealValidationForm.protein?"tomato":"rgb(115, 184, 152)"})},null,4),[[p,a.form.protein]]),a.addMealValidationForm.protein?(r(),n("p",K," Protein must be below 200 ")):d("",!0)]),o("div",Q,[R,f(o("input",{"data-fat":"",type:"number",min:"0",inputmode:"numeric",pattern:"[0-9]*",title:"Non-negative integral number","onUpdate:modelValue":e[3]||(e[3]=s=>a.form.fat=s),style:u({borderColor:a.addMealValidationForm.fat?"tomato":"rgb(115, 184, 152) "})},null,4),[[p,a.form.fat]]),a.addMealValidationForm.fat?(r(),n("p",X," Fat must be below 200 ")):d("",!0)]),o("div",Y,[x,f(o("input",{"data-carbohydrates":"",type:"number",min:"0",inputmode:"numeric",pattern:"[0-9]*",title:"Non-negative integral number","onUpdate:modelValue":e[4]||(e[4]=s=>a.form.carbohydrates=s),style:u({borderColor:a.addMealValidationForm.carbohydrates?"tomato":"rgb(115, 184, 152)"})},null,4),[[p,a.form.carbohydrates]]),a.addMealValidationForm.carbohydrates?(r(),n("p",aa," Carbohydrates must be below 600 ")):d("",!0)]),o("div",ea,[F(l,null,{default:I(()=>[L("Add meal")]),_:1})])],32),a.showModal?(r(),D(t,{key:0,message:a.message,passData:a.passData,showModal:a.showModal,closeModal:a.closeModal},null,8,["message","passData","showModal","closeModal"])):d("",!0)],64)}const ta=V(E,[["render",oa],["__scopeId","data-v-b9037353"]]),sa=g({name:"AddMealView",components:{AddMealToBaseForm:ta}});const ra=a=>(w("data-v-4f808c26"),a=a(),N(),a),na={class:"add-meal"},la=ra(()=>o("header",{class:"add-meal__header"},[o("h2",{class:"add-meal__header-title family-Nerko"},"Add meal"),o("span",{class:"add-meal__header-info"}," * add food per 100g")],-1));function da(a,e,y,b,i,m){const l=v("AddMealToBaseForm");return r(),n("div",na,[la,F(l)])}const ca=V(sa,[["render",da],["__scopeId","data-v-4f808c26"]]);export{ca as default};
