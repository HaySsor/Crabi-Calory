import{x as A,y as B,z as C,_ as F,A as N,B as M,r as f,a as k,o as l,b as d,e as o,f as _,g as p,C as y,h as i,d as V,w as T,i as I,m as S,j as D,F as U,p as w,l as g}from"./index.c84f11bc.js";import{L}from"./LoadingModal.6cfdb490.js";async function z(s){const e=A(B,"meals");await C(e,s)}const j={name:"AddMealToBaseForm",components:{LoadingModal:L,AppButton:N},setup(){const s=M({name:"",kcal:0,protein:0,fat:0,carbohydrates:0}),e=M({name:!1,kcal:!1,protein:!1,fat:!1,carbohydrates:!1}),u=f(0),a=f("Wait"),c=f(!1),m=f(!1),n=f(!0),t=M({name:"",kcal:0,protein:0,fat:0,carbohydrates:0});async function r(){if(!t.name.match(/^[A-Za-z]+$/)){e.name=!0;return}if(e.name=!1,t.kcal<=0&&t.kcal<1e3){e.kcal=!0;return}if(e.kcal=!1,parseFloat(t.protein)>200){e.protein=!0;return}if(e.protein=!1,parseFloat(t.fat)>200){e.fat=!0;return}if(e.fat=!1,parseFloat(t.carbohydrates)>600){e.carbohydrates=!0;return}e.carbohydrates=!1;const h={name:t.name,kcal:parseFloat(t.kcal),protein:parseFloat(t.protein),fat:parseFloat(t.fat),carbohydrates:parseFloat(t.carbohydrates),id:Math.floor(Math.random()*200)};await v(h)}async function v(h){m.value=!0,c.value=!0,await z(h),await Object.assign(t,s),a.value="Meal added :)",n.value=!1,m.value=!1}function x(){c.value=!1}return{form:t,addMeal:v,closeModal:x,message:a,showModal:c,regInSubmission:m,passData:n,addMealValidationForm:e,verification:r,n:u}}},b=s=>(w("data-v-7375628a"),s=s(),g(),s),P={class:"form__name"},E=b(()=>o("label",{class:"family-Nerko"},"Name",-1)),O={key:0,class:"error"},W={class:"form__kcal"},Z=b(()=>o("label",{class:"family-Nerko"},"Calory",-1)),q={key:0,class:"error"},G={class:"form__protein"},H=b(()=>o("label",{class:"family-Nerko"},"Protein",-1)),J={key:0,class:"error"},K={class:"form__fat"},Q=b(()=>o("label",{class:"family-Nerko"},"Fat",-1)),R={key:0,class:"error"},X={class:"form__carbohydrates"},Y=b(()=>o("label",{class:"family-Nerko"},"Carbohydrates",-1)),$={key:0,class:"error"},aa={class:"form__button"};function ea(s,e,u,a,c,m){const n=k("AppButton"),t=k("LoadingModal");return l(),d(U,null,[o("form",{class:"form",onSubmit:e[5]||(e[5]=S((...r)=>a.verification&&a.verification(...r),["prevent"]))},[o("div",P,[E,_(o("input",{"data-name":"",type:"text","onUpdate:modelValue":e[0]||(e[0]=r=>a.form.name=r),style:y({borderColor:a.addMealValidationForm.name?"tomato":"rgb(115, 184, 152) "})},null,4),[[p,a.form.name]]),a.addMealValidationForm.name?(l(),d("p",O,"Name can't be empty")):i("",!0)]),o("div",W,[Z,_(o("input",{"data-calory":"",type:"text","onUpdate:modelValue":e[1]||(e[1]=r=>a.form.kcal=r),style:y({borderColor:a.addMealValidationForm.kcal?"tomato":"rgb(115, 184, 152) "})},null,4),[[p,a.form.kcal]]),a.addMealValidationForm.kcal?(l(),d("p",q," Calorie must be on 1 to 1000 ")):i("",!0)]),o("div",G,[H,_(o("input",{"data-protein":"",type:"text","onUpdate:modelValue":e[2]||(e[2]=r=>a.form.protein=r),style:y({borderColor:a.addMealValidationForm.protein?"tomato":"rgb(115, 184, 152)"})},null,4),[[p,a.form.protein]]),a.addMealValidationForm.protein?(l(),d("p",J," Protein must be below 200 ")):i("",!0)]),o("div",K,[Q,_(o("input",{"data-fat":"",type:"text","onUpdate:modelValue":e[3]||(e[3]=r=>a.form.fat=r),style:y({borderColor:a.addMealValidationForm.fat?"tomato":"rgb(115, 184, 152) "})},null,4),[[p,a.form.fat]]),a.addMealValidationForm.fat?(l(),d("p",R," Fat must be below 200 ")):i("",!0)]),o("div",X,[Y,_(o("input",{"data-carbohydrates":"",type:"text","onUpdate:modelValue":e[4]||(e[4]=r=>a.form.carbohydrates=r),style:y({borderColor:a.addMealValidationForm.carbohydrates?"tomato":"gb(115, 184, 152)"})},null,4),[[p,a.form.carbohydrates]]),a.addMealValidationForm.carbohydrates?(l(),d("p",$," Carbohydrates must be below 600 ")):i("",!0)]),o("div",aa,[V(n,null,{default:T(()=>[I("Add meal")]),_:1})])],32),a.showModal?(l(),D(t,{key:0,message:a.message,passData:a.passData,showModal:a.showModal,closeModal:a.closeModal},null,8,["message","passData","showModal","closeModal"])):i("",!0)],64)}const oa=F(j,[["render",ea],["__scopeId","data-v-7375628a"]]);const ta={name:"AddMealView",components:{AddMealToBaseForm:oa}},sa=s=>(w("data-v-c53060ff"),s=s(),g(),s),ra={class:"add-meal"},la=sa(()=>o("header",{class:"add-meal__header"},[o("h2",{class:"add-meal__header-title family-Nerko"},"Add meal"),o("span",{class:"add-meal__header-info"}," * add food per 100g")],-1));function da(s,e,u,a,c,m){const n=k("AddMealToBaseForm");return l(),d("div",ra,[la,V(n)])}const ca=F(ta,[["render",da],["__scopeId","data-v-c53060ff"]]);export{ca as default};
